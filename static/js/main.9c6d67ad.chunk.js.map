{"version":3,"sources":["components/StdButton.js","images/skull.png","images/home-scroll.png","images/home-water.png","game/board.js","game/ship.js","game/player.js","pages/HomePage.js","components/BoardGrid.js","components/PlacingShipsNames.js","util/random.js","pages/PlacingPage.js","components/PlayingTable.js","components/WinnerBoard.js","pages/PlayingPage.js","App.js","index.js"],"names":["StdButton","string","textSize","handleClick","style","transition","onClick","className","boardFactory","boardState","i","row","j","push","placeShip","shipLength","cord","axis","adjCordOne","adjCordTwo","cordOne","cordTwo","Error","checkPlacement","recieveAttack","shipFactory","name","length","body","hitMarker","checkForDeath","isDead","playerFactory","board","ships","carrier","battleship","cruiser","submarine","destroyer","placeMyShip","ship","attack","targetPlayer","shipsHitCheck","bodyPart","JSON","stringify","shipsDeadCheck","theyAllDead","shipNames","classes","HomePage","placingStart","setVsCpu","maxWidth","alt","src","scrollImg","pirateSkullImg","playerOne","playerTwo","maxHeight","water","BoardGrid","gridSpotClick","hideOccupied","grid","col","id","cursor","height","width","err","alert","placingShip","shipName","PlacingShipsNames","shipNameOne","useRef","shipNameTwo","shipNameThr","shipNameFour","shipNameFive","useEffect","current","textDecoration","ref","randomNumberGen","min","max","Math","ceil","floor","random","randomCordGen","randomAxis","ran","rand","fillBoardRandomly","player","e","attackBoardRandomly","attackingPlayer","PlacingPage","setViewPage","vsCpu","useState","setPlacingShip","setAxis","updatePlacingShip","minHeight","backgroundImage","skull","backgroundSize","opacity","scroll","PlayingTable","boardOne","playerOneAttacking","boardTwo","playerTwoAttacking","whosTurn","viewingBoard","WinnerBoard","winnerName","PlayingPage","players","setWhosTurn","setViewBoard","winner","setWinner","time","gridSpots","Array","from","document","querySelectorAll","pointerEvents","lastRand","randNum","adding","setInterval","classList","add","removing","remove","setTimeout","clearInterval","highlightRandom","App","viewPage","setPlayers","ReactDOM","render","StrictMode","getElementById"],"mappings":"gPAceA,EAZG,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACnC,OACI,wBACIC,MAAO,CAAEC,WAAY,sBACrBC,QAASH,EACTI,UAAS,oBAAeL,EAAf,yDAHb,SAKKD,KCTE,MAA0B,kCCA1B,MAA0B,wCCA1B,MAA0B,uC,cC8E1BO,EAzEM,WAIjB,IAHA,IAAIC,EAAa,GAGRC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExB,IADA,IAAMC,EAAM,GACHC,EAAI,EAAGA,EAAI,EAAGA,IACnBD,EAAIE,KAAK,KAEbJ,EAAWI,KAAKF,GA6DpB,MAFc,CAAEF,WAAYA,EAAYK,UAvCtB,SAACC,EAAYC,EAAMC,GAAU,IAAD,cACbD,GAIzBE,EALsC,KAKf,EACvBC,EANsC,KAMf,GAtBR,SAACJ,EAAYK,EAASC,EAASJ,GAClD,IAAK,IAAIP,EAAI,EAAGA,EAAIK,EAAYL,IAAK,CACjC,GACc,MAATO,GAAgBG,EAAU,GACjB,MAATH,GAAgBI,EAAU,EAE3B,MAAM,IAAIC,MAAM,+CACb,GAAqC,MAAjCb,EAAWW,GAASC,GAC3B,MAAM,IAAIC,MACN,iDAGC,MAATL,EAAeI,IAAYD,KAa/BG,CAAeR,EAAYG,EAAYC,EAAYF,GAEnD,IAAK,IAAIP,EAAI,EAAGA,EAAIK,EAAYL,IAC5BD,EAAWS,GAAYC,GAAc,IAC5B,MAATF,EAAeE,IAAeD,KA0BaM,cAtB7B,SAACR,GAAU,IAAD,cACCA,GAIzBE,EALwB,KAKD,EACvBC,EANwB,KAMD,EAG3B,GAC2C,MAAvCV,EAAWS,GAAYC,IACgB,MAAvCV,EAAWS,GAAYC,GAEvB,MAAM,IAAIG,MAAM,mCAImB,MAAvCb,EAAWS,GAAYC,GAChBV,EAAWS,GAAYC,GAAc,IACrCV,EAAWS,GAAYC,GAAc,OC9CrCM,EAxBK,SAACC,EAAMC,GAIvB,IAFA,IAAIC,EAAO,GAEFlB,EAAI,EAAGA,EAAIiB,EAAQjB,IACxBkB,EAAKf,KAAK,CAAEgB,WAAW,EAAOb,KAAM,KAgBxC,MAFiB,CAAEU,KAAMA,EAAME,KAAMA,EAAME,cAXrB,WAClB,IADwB,EACpBC,GAAS,EADW,cAEDH,GAFC,IAExB,2BAA6B,CACzB,IAA2B,IADF,QACZC,UAAqB,CAC9BE,GAAS,EACT,QALgB,8BAQxB,OAAOA,KC4DAC,EAzEO,SAACN,GACnB,IAAMO,EAAQzB,IAQR0B,EAAQ,CACVC,QAPYV,EAAY,UAAW,GAQnCW,WAPeX,EAAY,aAAc,GAQzCY,QAPYZ,EAAY,UAAW,GAQnCa,UAPcb,EAAY,YAAa,GAQvCc,UAPcd,EAAY,YAAa,IA+D3C,MAVe,CACXC,KAAMA,EACNO,MAAOA,EACPC,MAAOA,EACPM,YA/CgB,SAACC,EAAMzB,EAAMC,GAC7BgB,EAAMnB,UAAU2B,EAAKb,KAAKD,OAAQX,EAAMC,GADF,oBAETD,GAAxBI,EAFiC,KAExBC,EAFwB,mBAGnBoB,EAAKb,MAHc,IAGtC,2BAA8B,SACrBZ,KAAO,CAACI,EAASC,GACb,MAATJ,EAAeI,IAAYD,KALO,gCAgDtCsB,OAVW,SAACC,EAAc3B,GAC1B2B,EAAaV,MAAMT,cAAcR,GACjC2B,EAAaC,cAAc5B,IAS3B4B,cAxCkB,SAAC5B,GACnB,IAAK,IAAMyB,KAAQP,EAAO,CAAC,IAAD,gBACCA,EAAMO,GAAMb,MADb,IACtB,2BAAyC,CAAC,IAA/BiB,EAA8B,QACrC,GAAIC,KAAKC,UAAUF,EAAS7B,QAAU8B,KAAKC,UAAU/B,GAAO,CACxD6B,EAAShB,WAAY,EACrB,QAJc,iCAwC1BmB,eA9BmB,WASnB,IARA,IAAIC,GAAc,EACZC,EAAY,CACd,UACA,aACA,UACA,YACA,aAEKxC,EAAI,EAAGA,EAAIwC,EAAUvB,OAAQjB,IAClC,IAA4C,IAAxCwB,EAAMgB,EAAUxC,IAAIoB,gBAA2B,CAC/CmB,GAAc,EACd,MAGR,OAAOA,KChDTE,EACQ,0CADRA,EAEc,mDAFdA,EAGQ,cAHRA,EAII,6CAJJA,EAKoB,mDALpBA,EAMoB,sDANpBA,EAOO,8BA6DEC,EA1DE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAe9B,OACI,sBAAK/C,UAAW4C,EAAhB,UACI,sBACI5C,UAAW4C,EACX/C,MAAO,CAAEmD,SAAU,SAFvB,UAII,qBACIhD,UAAW4C,EACXK,IAAI,SACJC,IAAKC,IAET,qBAAKnD,UAAW4C,EAAhB,4BAEJ,sBAAK5C,UAAW4C,EAAhB,UACI,qBACIK,IAAI,QACJpD,MAAO,CAAEmD,SAAU,SACnBhD,UAAU,SACVkD,IAAKE,IAET,sBAAKpD,UAAW4C,EAAhB,UACI,cAAC,EAAD,CACIlD,OAAO,WACPC,SAAS,UACTC,YAtCG,WACnBmD,GAAS,GACT,IAAMM,EAAY5B,EAAc,cAC1B6B,EAAY7B,EAAc,cAChCqB,EAAaO,EAAWC,MAoCZ,cAAC,EAAD,CACI5D,OAAO,WACPC,SAAS,UACTC,YApCG,WACnBmD,GAAS,GACT,IAAMM,EAAY5B,EAAc,cAC1B6B,EAAY7B,EAAc,cAChCqB,EAAaO,EAAWC,YAoCpB,qBACIzD,MAAO,CAAE0D,UAAW,QACpBvD,UAAW4C,EACXM,IAAKM,EACLP,IAAI,cCRLQ,EA3DG,SAAC,GAEf,IAFwE,IAAvDvD,EAAsD,EAAtDA,WAAYwD,EAA0C,EAA1CA,cAA0C,IAA3BC,oBAA2B,SACjEC,EAAO,GACJzD,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAEzB,IADA,IAAMC,EAAM,GADa,aAGrB,IAAMK,EAAO,CAACN,EAAGE,GACXwD,EACF,qBAEIC,GAAE,UAAKrD,GACPZ,MAAO,CACHkE,OAAQ,UACRC,OAAQ,OACRC,MAAO,SAEXlE,QAAS,WAEL,IACI2D,EAAcjD,GAChB,MAAOyD,GAIL,YAHAC,MACI,qHAKZnE,UAAS,UACa,SAAlB0D,EAAA,4CADK,uDAKwB,MAA7BxD,EAAWC,EAAI,GAAGE,EAAI,KACL,IAAjBsD,EACM,GACA,0BARD,YAUwB,MAA7BzD,EAAWC,EAAI,GAAGE,EAAI,KACL,IAAjBsD,EACM,cAC6B,MAA7BzD,EAAWC,EAAI,GAAGE,EAAI,GACtB,cAC6B,MAA7BH,EAAWC,EAAI,GAAGE,EAAI,GACtB,eACA,KAnCLI,GAuCbL,EAAIE,KAAKuD,IA3CJxD,EAAI,EAAGA,GAAK,EAAGA,IAAM,IA6C9BuD,EAAKtD,KACD,qBAAaT,MAAO,CAAEmE,OAAQ,SAAWhE,UAAU,cAAnD,SACKI,GADKD,IAMlB,OAAOyD,GCxDLhB,EACQ,SAACwB,EAAaC,GAAd,qBACED,EAAYjD,OAASkD,EAAW,eAAiB,KAuElDC,EApEW,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,YACnBG,EAAcC,mBACdC,EAAcD,mBACdE,EAAcF,mBACdG,EAAeH,mBACfI,EAAeJ,mBA2BrB,OAhBAK,qBAAU,WACmB,YAArBT,EAAYjD,MARhBoD,EAAYO,QAAQjF,MAAMkF,eAAiB,OAC3CN,EAAYK,QAAQjF,MAAMkF,eAAiB,OAC3CL,EAAYI,QAAQjF,MAAMkF,eAAiB,OAC3CJ,EAAaG,QAAQjF,MAAMkF,eAAiB,OAC5CH,EAAaE,QAAQjF,MAAMkF,eAAiB,QAMZ,eAArBX,EAAYjD,KACnBoD,EAAYO,QAAQjF,MAAMkF,eAAiB,eACf,YAArBX,EAAYjD,KACnBsD,EAAYK,QAAQjF,MAAMkF,eAAiB,eACf,cAArBX,EAAYjD,KACnBuD,EAAYI,QAAQjF,MAAMkF,eAAiB,eACf,cAArBX,EAAYjD,KACnBwD,EAAaG,QAAQjF,MAAMkF,eAAiB,eACrB,SAAhBX,IACPQ,EAAaE,QAAQjF,MAAMkF,eAAiB,mBAKhD,qCACI,qBACIC,IAAKT,EACLvE,UAAW4C,EAAiBwB,EAAa,WAF7C,qBAMA,qBACIY,IAAKP,EACLzE,UAAW4C,EAAiBwB,EAAa,cAF7C,wBAMA,qBACIY,IAAKN,EACL1E,UAAW4C,EAAiBwB,EAAa,WAF7C,qBAMA,qBACIY,IAAKL,EACL3E,UAAW4C,EAAiBwB,EAAa,aAF7C,uBAMA,qBACIY,IAAKJ,EACL5E,UAAW4C,EAAiBwB,EAAa,aAF7C,2BCjENa,EAAkB,SAACC,EAAKC,GAG1B,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,GAGnDM,EAAgB,WAIlB,MAAO,CAHSP,EAAgB,EAAG,GACnBA,EAAgB,EAAG,KAKjCQ,EAAa,WACf,IAAMC,EAAMT,EAAgB,EAAG,GAC/B,OAAY,IAARS,EACO,IACQ,IAARA,EACA,SADJ,GA8FIC,EAPF,CACTV,kBACAO,gBACAI,kBAnEsB,SAACC,GAGvB,KAAgD,KAAzCA,EAAOlE,MAAP,QAAwBN,KAAK,GAAGZ,MACnC,IACIoF,EAAO5D,YACH4D,EAAOlE,MAAP,QACA6D,IACAC,KAEN,MAAOK,GACL,SAIR,KAAmD,KAA5CD,EAAOlE,MAAP,WAA2BN,KAAK,GAAGZ,MACtC,IACIoF,EAAO5D,YACH4D,EAAOlE,MAAP,WACA6D,IACAC,KAEN,MAAOK,GACL,SAIR,KAAgD,KAAzCD,EAAOlE,MAAP,QAAwBN,KAAK,GAAGZ,MACnC,IACIoF,EAAO5D,YACH4D,EAAOlE,MAAP,QACA6D,IACAC,KAEN,MAAOK,GACL,SAIR,KAAkD,KAA3CD,EAAOlE,MAAP,UAA0BN,KAAK,GAAGZ,MACrC,IACIoF,EAAO5D,YACH4D,EAAOlE,MAAP,UACA6D,IACAC,KAEN,MAAOK,GACL,SAIR,KAAkD,KAA3CD,EAAOlE,MAAP,UAA0BN,KAAK,GAAGZ,MACrC,IACIoF,EAAO5D,YACH4D,EAAOlE,MAAP,UACA6D,IACAC,KAEN,MAAOK,GACL,WASRC,oBAtFwB,SAACC,EAAiB5D,GAO1C,IALA,IAAI3B,EAAO+E,IAFgD,EAIlC/E,EAJkC,mBAItDI,EAJsD,KAI7CC,EAJ6C,KAQK,MAA5DsB,EAAaV,MAAMxB,WAAWW,EAAU,GAAGC,EAAU,IACO,MAA5DsB,EAAaV,MAAMxB,WAAWW,EAAU,GAAGC,EAAU,IACvD,OACEL,EAAO+E,IADT,mBAEG3E,EAFH,KAEYC,EAFZ,KAKFkF,EAAgB7D,OAAOC,EAAc3B,KC7BnCmC,EACQ,YADRA,EAEQ,mEAFRA,EAGiB,kDAHjBA,EAIU,SAACwB,GAAD,gBAEY,SAAhBA,EAAyB,OAAS,SAF9B,iCAJVxB,EAQoB,SAACwB,GAAD,gBAEE,SAAhBA,EAAyB,OAAS,SAFpB,iCARpBxB,EAYiB,4CAZjBA,EAaQ,yEAgICqD,EA7HK,SAAC,GAAoC,IAAlCJ,EAAiC,EAAjCA,OAAQK,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAAY,EACdC,mBAASP,EAAOlE,MAAP,SADK,mBAC7CyC,EAD6C,KAChCiC,EADgC,OAE5BD,mBAAS,KAFmB,mBAE7C1F,EAF6C,KAEvC4F,EAFuC,KAIpDzB,qBAAU,WACc,eAAhBgB,EAAO1E,OAAmC,IAAVgF,IAChCR,EAAKC,kBAAkBC,GACvBK,EAAY,eAIpBrB,qBAAU,WACc,eAAhBgB,EAAO1E,MACPkF,EAAeR,EAAOlE,MAAP,WAEpB,CAACkE,IAEJ,IAAMU,EAAoB,WACG,YAArBnC,EAAYjD,KACZkF,EAAeR,EAAOlE,MAAP,YACa,eAArByC,EAAYjD,KACnBkF,EAAeR,EAAOlE,MAAP,SACa,YAArByC,EAAYjD,KACnBkF,EAAeR,EAAOlE,MAAP,WACa,cAArByC,EAAYjD,KACnBkF,EAAeR,EAAOlE,MAAP,WACa,cAArByC,EAAYjD,KACnBkF,EAAe,QACQ,SAAhBjC,GACPiC,EAAeR,EAAOlE,MAAP,UAgCvB,OACI,sBACI3B,UAAW4C,EACX/C,MAAO,CACH2G,UAAW,QACXC,gBAAgB,OAAD,OAASC,EAAT,KACfC,eAAgB,OALxB,UAQI,sBAAK3G,UAAW4C,EAAhB,UAAoCiD,EAAO1E,KAA3C,kBACA,qBACItB,MAAO,CACHmE,OAAQ,OACR2C,eAAgB,cAChBC,QAAS,MAEb5G,UAAW4C,EANf,SAQI,cAAC,EAAD,CACI1C,WAAY2F,EAAOnE,MAAMxB,WACzBwD,cACoB,SAAhBU,EAAyB,OAjDvB,SAAC3D,GACnB,IACIoF,EAAO5D,YAAYmC,EAAa3D,EAAMC,GACxC,MAAOwD,GAEL,YADAC,MAAMD,GAGVqC,SA8CI,qBAAKvG,UAAW4C,EAAmBwB,GAAnC,SACI,cAAC,EAAD,CACIzE,SAAS,UACTD,OAAO,QACPE,YAvCI,WACI,eAAhBiG,EAAO1E,MACP+E,EAAY,WACZK,MAEAL,EAAY,cACZK,UAoCA,sBAAKvG,UAAW4C,EAA6BwB,GAA7C,UACI,cAAC,EAAD,CACIzE,SAAQ,UAAc,MAATe,EAAe,WAAa,WACzChB,OAAO,IACPE,YAtDS,WACrB0G,EAAQ,QAuDA,cAAC,EAAD,CACI5G,OAAO,IACPC,SAAQ,UAAc,MAATe,EAAe,WAAa,WACzCd,YAvDS,WACrB0G,EAAQ,MAmDA,kBAQJ,sBAAKtG,UAAW4C,EAAhB,UACI,qBACIM,IAAK2D,EACL5D,IAAI,aACJjD,UAAU,gBAEd,qBAAKA,UAAW4C,EAAhB,SACI,cAAC,EAAD,CACIiD,OAAQA,EACRzB,YAAaA,EACbiC,eAAgBA,aCrGzBS,EArCM,SAAC,GAOf,IANHC,EAME,EANFA,SACAC,EAKE,EALFA,mBACAC,EAIE,EAJFA,SACAC,EAGE,EAHFA,mBACAC,EAEE,EAFFA,SACAC,EACE,EADFA,aAEA,OACI,mCACsB,IAAjBA,EACG,cAAC,EAAD,CACIpH,UACImH,IAAaC,EACP,sBACA,sBAEVlH,WAAY6G,EACZrD,cAA4B,IAAbyD,EAAiB,OAASD,EACzCvD,aAA2B,IAAbwD,IAGlB,cAAC,EAAD,CACInH,UACImH,IAAaC,EACP,sBACA,sBAEVlH,WAAY+G,EACZvD,cAA4B,IAAbyD,EAAiB,OAASH,EACzCrD,aAA2B,IAAbwD,OC9B5BvE,EACQ,oFADRA,EAES,wBAFTA,EAGQ,oBAuBCyE,EApBK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,WAAYpB,EAAkB,EAAlBA,YAK/B,OACI,sBAAKlG,UAAW4C,EAAhB,UACI,sBAAK5C,UAAW4C,EAAhB,UAAqC0E,EAArC,YACA,qBAAKtH,UAAW4C,EAAhB,0CAGA,cAAC,EAAD,CACIlD,OAAO,WACPC,SAAS,YACTC,YAbE,WACVsG,EAAY,WCJdtD,EACQ,YADRA,EAEK,mEAFLA,EAGY,kDAHZA,EAIa,sBAiJJ2E,EA9IK,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASrB,EAAyB,EAAzBA,MAAOD,EAAkB,EAAlBA,YAAkB,EACrBE,mBAAS,GADY,mBAC9Ce,EAD8C,KACpCM,EADoC,OAEhBrB,mBAAS,GAFO,mBAE9CgB,EAF8C,KAEhCM,EAFgC,OAGzBtB,mBAAS,IAHgB,mBAG9CuB,EAH8C,KAGtCC,EAHsC,KAK/CvE,EAAYmE,EAAQnE,UACpBC,EAAYkE,EAAQlE,UA6B1BuB,qBAAU,WACN,GAAiB,IAAbsC,IAA4B,IAAVhB,EAAgB,EA5BlB,SAAC0B,GAGrB,IAFA,IAAMC,EAAYC,MAAMC,KAAKC,SAASC,iBAAiB,eAEvD,MAAmBJ,EAAnB,eAAe,KACNjI,MAAMsI,cAAgB,OAG/B,IAAIC,EAAW,EACXC,EAAU,EACRC,EAASC,aAAY,WACvBH,EAAWC,EACXA,EAAU1C,EAAKV,gBAAgB,EAAG,IAClC6C,EAAUO,GAASG,UAAUC,IAAI,2BAClC,KACGC,EAAWH,aAAY,WACzBT,EAAUM,GAAUI,UAAUG,OAAO,2BACtC,KACHC,YAAW,WAAO,IAAD,gBACMd,GADN,IACb,2BAA8B,QACrBjI,MAAMsI,cAAgB,OAFlB,8BAIbL,EAAUO,GAASG,UAAUG,OAAO,yBACpCE,cAAcH,GACdG,cAAcP,KACfT,EAAO,KAMNiB,CADa,MAEbF,YAAW,WACPjD,EAAKI,oBAAoBzC,EAAWD,GACpCoE,EAAY,GACZC,EAAa,KALJ,UA4CrB,OACI,sBACI1H,UAAW4C,EACX/C,MAAO,CACH2G,UAAW,QACXC,gBAAgB,OAAD,OAASC,EAAT,KACfC,eAAgB,OALxB,UAQI,qBAAK3G,UAAW4C,EAAhB,SACgB,KAAX+E,EACK,aACAP,IAAiBD,EAAjB,aAEa,IAAbA,IAA4B,IAAVhB,EAAlB,gBAEa,IAAbgB,GAAmC,IAAjBC,EAAlB,8BAEa,IAAbD,GAAmC,IAAjBC,EAClB,8BACA,KAEV,qBACIvH,MAAO,CACHmE,OAAQ,OACR2C,eAAgB,cAChBC,QAAS,MAEb5G,UAAW4C,EANf,SAQgB,KAAX+E,EACG,cAAC,EAAD,CACIZ,SAAU1D,EAAU3B,MAAMxB,WAC1B8G,mBAnEO,SAACvG,GACxB,IACI4C,EAAUlB,OAAOmB,EAAW7C,GAC9B,MAAOyD,GAEL,YADAC,MAAMD,IAIyB,IAA/BZ,EAAUb,kBACVmF,EAAU,cAEdF,EAAa,GACbD,EAAY,IAwDIR,SAAU3D,EAAU5B,MAAMxB,WAC1BgH,mBAtDO,SAACzG,GACxB,IACI6C,EAAUnB,OAAOkB,EAAW5C,GAC9B,MAAOyD,GAEL,YADAC,MAAMD,IAIyB,IAA/Bb,EAAUZ,kBACVmF,EAAU,cAEdF,EAAa,GACbD,EAAY,IA2CIN,SAAUA,EACVC,aAAcA,IAGlB,cAAC,EAAD,CACIE,WAAYK,EACZzB,YAAaA,MAIzB,qBAAKlG,UAAW4C,EAAhB,SACkB,IAAbuE,IAA4B,IAAVhB,EACf,GAEA,cAAC,EAAD,CACIzG,OAAO,cACPC,SAAS,YACTC,YAzDD,WACM8H,EAAJ,IAAjBN,EAAkC,EAAkB,YC5C7C2B,MA1Cf,WAAgB,IAAD,EACqB3C,mBAAS,IAD9B,mBACJ4C,EADI,KACM9C,EADN,OAEeE,mBAAS,IAFxB,mBAEJD,EAFI,KAEGpD,EAFH,OAGmBqD,mBAAS,IAH5B,mBAGJoB,EAHI,KAGKyB,EAHL,KAWX,OACI,qBAAKjJ,UAAU,MAAf,SACkB,YAAbgJ,EACG,cAAC,EAAD,CACInD,OAAQ2B,EAAO,UACftB,YAAaA,EACbC,MAAOA,IAEE,eAAb6C,EACA,cAAC,EAAD,CACInD,OAAQ2B,EAAO,UACftB,YAAaA,EACbC,MAAOA,IAEE,YAAb6C,EACA,cAAC,EAAD,CACIxB,QAASA,EACTrB,MAAOA,EACPD,YAAaA,IAGjB,cAAC,EAAD,CACIpD,aA5BK,SAACO,EAAWC,GAE7B2F,EADmB,CAAE5F,UAAWA,EAAWC,UAAWA,IAEtD4C,EAAY,YA0BAnD,SAAUA,EACVoD,MAAOA,OCpC3B+C,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJnB,SAASoB,eAAe,W","file":"static/js/main.9c6d67ad.chunk.js","sourcesContent":["import React from 'react';\n\nconst StdButton = ({ string, textSize, handleClick }) => {\n    return (\n        <button\n            style={{ transition: 'font-size .2s ease' }}\n            onClick={handleClick}\n            className={`w-36 h-16 ${textSize} p-2 mx-4 my-2 bg-red-200 rounded border border-black`}\n        >\n            {string}\n        </button>\n    );\n};\n\nexport default StdButton;\n","export default __webpack_public_path__ + \"static/media/skull.d7a54c84.png\";","export default __webpack_public_path__ + \"static/media/home-scroll.a99cd0f2.png\";","export default __webpack_public_path__ + \"static/media/home-water.5910a5d9.png\";","// board is 8 x 8\n// 2d Array , 8 rows and each row 8 spots\n// Spot can have value of\n// W(water), H(hit), O(occupied), M(miss);\n\nconst boardFactory = () => {\n    let boardState = [];\n\n    //adds 8 rows with 8 spots with val 'W' to boardState\n    for (var i = 0; i < 8; i++) {\n        const row = [];\n        for (var j = 0; j < 8; j++) {\n            row.push('W');\n        }\n        boardState.push(row);\n    }\n\n    //ship placement checker\n    const checkPlacement = (shipLength, cordOne, cordTwo, axis) => {\n        for (var i = 0; i < shipLength; i++) {\n            if (\n                (axis === 'Y' && cordOne > 7) ||\n                (axis === 'X' && cordTwo > 7)\n            ) {\n                throw new Error('Not enough room for ship to be placed here.');\n            } else if (boardState[cordOne][cordTwo] === 'O') {\n                throw new Error(\n                    \"Can't place ship here, collides with another.\"\n                );\n            }\n            axis === 'X' ? cordTwo++ : cordOne++;\n        }\n    };\n\n    const placeShip = (shipLength, cord, axis) => {\n        let [cordOne, cordTwo] = [...cord];\n        ////minus 1 for cord so value is equal index in array\n        //that way, inputs easier to understand imo\n        //'1,1' , row 1 spot 1 '3,5', row 3 spot 5 etc.\n        let adjCordOne = cordOne - 1;\n        let adjCordTwo = cordTwo - 1;\n\n        //throws error if placement is illegal\n        checkPlacement(shipLength, adjCordOne, adjCordTwo, axis);\n\n        for (var i = 0; i < shipLength; i++) {\n            boardState[adjCordOne][adjCordTwo] = 'O';\n            axis === 'X' ? adjCordTwo++ : adjCordOne++;\n        }\n    };\n\n    const recieveAttack = (cord) => {\n        let [cordOne, cordTwo] = [...cord];\n        ////minus 1 for cord so value is equal index in array\n        //that way, inputs easier to understand imo\n        //'1,1' , row 1 spot 1 '3,5', row 3 spot 5 etc.\n        let adjCordOne = cordOne - 1;\n        let adjCordTwo = cordTwo - 1;\n\n        //throws error if spot has been attacked already\n        if (\n            boardState[adjCordOne][adjCordTwo] === 'H' ||\n            boardState[adjCordOne][adjCordTwo] === 'M'\n        ) {\n            throw new Error('Spot has already been attacked.');\n        }\n\n        //if spot marked O its a H and if not its a M\n        boardState[adjCordOne][adjCordTwo] === 'O'\n            ? (boardState[adjCordOne][adjCordTwo] = 'H')\n            : (boardState[adjCordOne][adjCordTwo] = 'M');\n    };\n\n    const board = { boardState: boardState, placeShip, recieveAttack };\n\n    return board;\n};\n\nexport default boardFactory;\n","const shipFactory = (name, length) => {\n    //arr representing body of ship\n    let body = [];\n\n    for (var i = 0; i < length; i++) {\n        body.push({ hitMarker: false, cord: '' });\n    }\n\n    const checkForDeath = () => {\n        let isDead = true;\n        for (const bodyPart of body) {\n            if (bodyPart.hitMarker === false) {\n                isDead = false;\n                break;\n            }\n        }\n        return isDead;\n    };\n\n    const shipInfo = { name: name, body: body, checkForDeath };\n\n    return shipInfo;\n};\n\nexport default shipFactory;\n","import boardFactory from './board';\nimport shipFactory from './ship';\n\nconst playerFactory = (name) => {\n    const board = boardFactory();\n\n    const carrier = shipFactory('Carrier', 5);\n    const battleship = shipFactory('Battleship', 4);\n    const cruiser = shipFactory('Cruiser', 3);\n    const submarine = shipFactory('Submarine', 3);\n    const destroyer = shipFactory('Destroyer', 2);\n\n    const ships = {\n        carrier: carrier,\n        battleship: battleship,\n        cruiser: cruiser,\n        submarine: submarine,\n        destroyer: destroyer,\n    };\n\n    const placeMyShip = (ship, cord, axis) => {\n        board.placeShip(ship.body.length, cord, axis);\n        let [cordOne, cordTwo] = [...cord];\n        for (const spot of ship.body) {\n            spot.cord = [cordOne, cordTwo];\n            axis === 'X' ? cordTwo++ : cordOne++;\n        }\n    };\n\n    const shipsHitCheck = (cord) => {\n        for (const ship in ships) {\n            for (const bodyPart of ships[ship].body) {\n                if (JSON.stringify(bodyPart.cord) === JSON.stringify(cord)) {\n                    bodyPart.hitMarker = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    const shipsDeadCheck = () => {\n        let theyAllDead = true;\n        const shipNames = [\n            'carrier',\n            'battleship',\n            'cruiser',\n            'submarine',\n            'destroyer',\n        ];\n        for (var i = 0; i < shipNames.length; i++) {\n            if (ships[shipNames[i]].checkForDeath() === false) {\n                theyAllDead = false;\n                break;\n            }\n        }\n        return theyAllDead;\n    };\n\n    const attack = (targetPlayer, cord) => {\n        targetPlayer.board.recieveAttack(cord);\n        targetPlayer.shipsHitCheck(cord);\n    };\n\n    const player = {\n        name: name,\n        board: board,\n        ships: ships,\n        placeMyShip,\n        attack,\n        shipsHitCheck,\n        shipsDeadCheck,\n    };\n\n    return player;\n};\n\nexport default playerFactory;\n","import React from 'react';\nimport StdButton from '../components/StdButton';\nimport pirateSkullImg from '../images/skull.png';\nimport scrollImg from '../images/home-scroll.png';\nimport water from '../images/home-water.png';\nimport playerFactory from '../game/player';\n\nconst classes = {\n    container: `min-h-screen flex flex-col items-center`,\n    headerContainer: `w-full flex items-center justify-center relative`,\n    scrollImg: `h-40 w-full`,\n    title: `absolute text-2xl md:text-4xl text-red-700`,\n    buttonsContainerOuter: `w-full flex items-center justify-center relative`,\n    buttonsContainerInner: `absolute flex flex-wrap justify-center items-center`,\n    waterImg: `fixed bottom-0 w-full h-1/5`,\n};\n\nconst HomePage = ({ placingStart, setVsCpu }) => {\n    const onePlayerClick = () => {\n        setVsCpu(true);\n        const playerOne = playerFactory('Player One');\n        const playerTwo = playerFactory('Player Two');\n        placingStart(playerOne, playerTwo);\n    };\n\n    const twoPlayerClick = () => {\n        setVsCpu(false);\n        const playerOne = playerFactory('Player One');\n        const playerTwo = playerFactory('Player Two');\n        placingStart(playerOne, playerTwo);\n    };\n\n    return (\n        <div className={classes.container}>\n            <div\n                className={classes.headerContainer}\n                style={{ maxWidth: '40rem' }}\n            >\n                <img\n                    className={classes.scrollImg}\n                    alt=\"scroll\"\n                    src={scrollImg}\n                ></img>\n                <div className={classes.title}>PIRATESHIPS</div>\n            </div>\n            <div className={classes.buttonsContainerOuter}>\n                <img\n                    alt=\"skull\"\n                    style={{ maxWidth: '30rem' }}\n                    className=\"w-full\"\n                    src={pirateSkullImg}\n                ></img>\n                <div className={classes.buttonsContainerInner}>\n                    <StdButton\n                        string=\"1 Player\"\n                        textSize=\"text-xl\"\n                        handleClick={onePlayerClick}\n                    ></StdButton>\n                    <StdButton\n                        string=\"2 Player\"\n                        textSize=\"text-xl\"\n                        handleClick={twoPlayerClick}\n                    ></StdButton>\n                </div>\n            </div>\n            <img\n                style={{ maxHeight: '5rem' }}\n                className={classes.waterImg}\n                src={water}\n                alt=\"water\"\n            ></img>\n        </div>\n    );\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst BoardGrid = ({ boardState, gridSpotClick, hideOccupied = false }) => {\n    const grid = [];\n    for (var i = 1; i <= 8; i++) {\n        const row = [];\n        for (var j = 1; j <= 8; j++) {\n            const cord = [i, j];\n            const col = (\n                <div\n                    key={cord}\n                    id={`${cord}`}\n                    style={{\n                        cursor: 'pointer',\n                        height: '100%',\n                        width: '12.5%',\n                    }}\n                    onClick={() => {\n                        //Not sure why but when vsCpu, the pointer events aren't turned off?\n                        try {\n                            gridSpotClick(cord);\n                        } catch (err) {\n                            alert(\n                                'For some reason clicking on your own board doesnt get disabled against cpus lol. Go attack the opponents board!'\n                            );\n                            return;\n                        }\n                    }}\n                    className={`${\n                        gridSpotClick === 'none'\n                            ? `pointer-events-none`\n                            : `pointer-events-auto`\n                    } my-grid-border grid-spot transition-colors ${\n                        boardState[i - 1][j - 1] === 'O' &&\n                        hideOccupied === false\n                            ? ''\n                            : 'hover:bg-grid-hover-bgc'\n                    } ${\n                        boardState[i - 1][j - 1] === 'O' &&\n                        hideOccupied === false\n                            ? 'bg-grid-occ'\n                            : boardState[i - 1][j - 1] === 'H'\n                            ? 'bg-grid-hit'\n                            : boardState[i - 1][j - 1] === 'M'\n                            ? 'bg-grid-miss'\n                            : ''\n                    }`}\n                ></div>\n            );\n            row.push(col);\n        }\n        grid.push(\n            <div key={i} style={{ height: '12.5%' }} className=\"flex w-full\">\n                {row}\n            </div>\n        );\n    }\n\n    return grid;\n};\n\nexport default BoardGrid;\n","import React, { useEffect, useRef } from 'react';\n\nconst classes = {\n    shipName: (placingShip, shipName) =>\n        `mx-1 ${placingShip.name === shipName ? 'text-red-700' : ''}`,\n};\n\nconst PlacingShipsNames = ({ placingShip }) => {\n    const shipNameOne = useRef();\n    const shipNameTwo = useRef();\n    const shipNameThr = useRef();\n    const shipNameFour = useRef();\n    const shipNameFive = useRef();\n\n    //resets all the words to not be striked out\n    const resetStrikeOutText = () => {\n        shipNameOne.current.style.textDecoration = 'none';\n        shipNameTwo.current.style.textDecoration = 'none';\n        shipNameThr.current.style.textDecoration = 'none';\n        shipNameFour.current.style.textDecoration = 'none';\n        shipNameFive.current.style.textDecoration = 'none';\n    };\n\n    useEffect(() => {\n        if (placingShip.name === 'Carrier') {\n            resetStrikeOutText();\n        } else if (placingShip.name === 'Battleship') {\n            shipNameOne.current.style.textDecoration = 'line-through';\n        } else if (placingShip.name === 'Cruiser') {\n            shipNameTwo.current.style.textDecoration = 'line-through';\n        } else if (placingShip.name === 'Submarine') {\n            shipNameThr.current.style.textDecoration = 'line-through';\n        } else if (placingShip.name === 'Destroyer') {\n            shipNameFour.current.style.textDecoration = 'line-through';\n        } else if (placingShip === 'done') {\n            shipNameFive.current.style.textDecoration = 'line-through';\n        }\n    });\n\n    return (\n        <>\n            <div\n                ref={shipNameOne}\n                className={classes.shipName(placingShip, 'Carrier')}\n            >\n                Carrier\n            </div>\n            <div\n                ref={shipNameTwo}\n                className={classes.shipName(placingShip, 'Battleship')}\n            >\n                Battleship\n            </div>\n            <div\n                ref={shipNameThr}\n                className={classes.shipName(placingShip, 'Cruiser')}\n            >\n                Cruiser\n            </div>\n            <div\n                ref={shipNameFour}\n                className={classes.shipName(placingShip, 'Submarine')}\n            >\n                Submarine\n            </div>\n            <div\n                ref={shipNameFive}\n                className={classes.shipName(placingShip, 'Destroyer')}\n            >\n                Destroyer\n            </div>\n        </>\n    );\n};\n\nexport default PlacingShipsNames;\n","const randomNumberGen = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst randomCordGen = () => {\n    const cordOne = randomNumberGen(1, 8);\n    const cordTwo = randomNumberGen(1, 8);\n\n    return [cordOne, cordTwo];\n};\n\nconst randomAxis = () => {\n    const ran = randomNumberGen(0, 1);\n    if (ran === 0) {\n        return 'X';\n    } else if (ran === 1) {\n        return 'Y';\n    }\n};\n\nconst attackBoardRandomly = (attackingPlayer, targetPlayer) => {\n    //random cord\n    let cord = randomCordGen();\n    //indexes of random cord\n    let [cordOne, cordTwo] = cord;\n    //makes sure cord is a legal spot to attack\n    //spot has to be 'O' or 'W'\n    while (\n        targetPlayer.board.boardState[cordOne - 1][cordTwo - 1] === 'H' ||\n        targetPlayer.board.boardState[cordOne - 1][cordTwo - 1] === 'M'\n    ) {\n        cord = randomCordGen();\n        [cordOne, cordTwo] = cord;\n    }\n    //use valid cord to attack enemy board\n    attackingPlayer.attack(targetPlayer, cord);\n};\n\nconst fillBoardRandomly = (player) => {\n    //ships body defaults to '' so it only changes if successful placement\n    //carrier\n    while (player.ships['carrier'].body[0].cord === '') {\n        try {\n            player.placeMyShip(\n                player.ships['carrier'],\n                randomCordGen(),\n                randomAxis()\n            );\n        } catch (e) {\n            continue;\n        }\n    }\n    //battleship\n    while (player.ships['battleship'].body[0].cord === '') {\n        try {\n            player.placeMyShip(\n                player.ships['battleship'],\n                randomCordGen(),\n                randomAxis()\n            );\n        } catch (e) {\n            continue;\n        }\n    }\n    //cruiser\n    while (player.ships['cruiser'].body[0].cord === '') {\n        try {\n            player.placeMyShip(\n                player.ships['cruiser'],\n                randomCordGen(),\n                randomAxis()\n            );\n        } catch (e) {\n            continue;\n        }\n    }\n    //Submarine\n    while (player.ships['submarine'].body[0].cord === '') {\n        try {\n            player.placeMyShip(\n                player.ships['submarine'],\n                randomCordGen(),\n                randomAxis()\n            );\n        } catch (e) {\n            continue;\n        }\n    }\n    //destroyer\n    while (player.ships['destroyer'].body[0].cord === '') {\n        try {\n            player.placeMyShip(\n                player.ships['destroyer'],\n                randomCordGen(),\n                randomAxis()\n            );\n        } catch (e) {\n            continue;\n        }\n    }\n};\n\nconst rand = {\n    randomNumberGen,\n    randomCordGen,\n    fillBoardRandomly,\n    attackBoardRandomly,\n};\n\nexport default rand;\n","import React, { useState, useEffect } from 'react';\nimport BoardGrid from '../components/BoardGrid';\nimport StdButton from '../components/StdButton';\nimport PlacingShipsNames from '../components/PlacingShipsNames';\nimport skull from '../images/skull.png';\nimport scroll from '../images/home-scroll.png';\nimport rand from '../util/random';\n\nconst classes = {\n    container: `bg-center`,\n    headerBar: `text-center text-red-700 text-3xl pb-1 bg-gray-300 bg-opacity-90`,\n    boardGridContainer: `w-5/6 mt-3 mx-auto bg-water-tile my-grid-border`,\n    doneButton: (placingShip) =>\n        `${\n            placingShip === 'done' ? 'flex' : 'hidden'\n        } justify-center text-red-700`,\n    axisButtonsContainer: (placingShip) =>\n        `${\n            placingShip !== 'done' ? 'flex' : 'hidden'\n        } justify-evenly text-red-700`,\n    shipNamesContainer: `relative flex justify-center items-center`,\n    shipNames: `absolute w-44 sm:w-64 text-sm sm:text-lg flex flex-wrap justify-around`,\n};\n\nconst PlacingPage = ({ player, setViewPage, vsCpu }) => {\n    const [placingShip, setPlacingShip] = useState(player.ships['carrier']);\n    const [axis, setAxis] = useState('X');\n\n    useEffect(() => {\n        if (player.name === 'Player Two' && vsCpu === true) {\n            rand.fillBoardRandomly(player);\n            setViewPage('playing');\n        }\n    });\n\n    useEffect(() => {\n        if (player.name === 'Player Two') {\n            setPlacingShip(player.ships['carrier']);\n        }\n    }, [player]);\n\n    const updatePlacingShip = () => {\n        if (placingShip.name === 'Carrier') {\n            setPlacingShip(player.ships['battleship']);\n        } else if (placingShip.name === 'Battleship') {\n            setPlacingShip(player.ships['cruiser']);\n        } else if (placingShip.name === 'Cruiser') {\n            setPlacingShip(player.ships['submarine']);\n        } else if (placingShip.name === 'Submarine') {\n            setPlacingShip(player.ships['destroyer']);\n        } else if (placingShip.name === 'Destroyer') {\n            setPlacingShip('done');\n        } else if (placingShip === 'done') {\n            setPlacingShip(player.ships['carrier']);\n        }\n    };\n\n    const gridSpotClick = (cord) => {\n        try {\n            player.placeMyShip(placingShip, cord, axis);\n        } catch (err) {\n            alert(err);\n            return;\n        }\n        updatePlacingShip();\n    };\n\n    const xAxisHandleClick = () => {\n        setAxis('X');\n    };\n\n    const yAxisHandleClick = () => {\n        setAxis('Y');\n    };\n\n    const donePlacing = () => {\n        if (player.name === 'Player Two') {\n            setViewPage('playing');\n            updatePlacingShip();\n        } else {\n            setViewPage('placingTwo');\n            updatePlacingShip();\n        }\n    };\n\n    return (\n        <div\n            className={classes.container}\n            style={{\n                minHeight: '100vh',\n                backgroundImage: `url(${skull})`,\n                backgroundSize: '20%',\n            }}\n        >\n            <div className={classes.headerBar}>{player.name} Place Ships</div>\n            <div\n                style={{\n                    height: '60vh',\n                    backgroundSize: '12.5% 12.5%',\n                    opacity: '.8',\n                }}\n                className={classes.boardGridContainer}\n            >\n                <BoardGrid\n                    boardState={player.board.boardState}\n                    gridSpotClick={\n                        placingShip === 'done' ? 'none' : gridSpotClick\n                    }\n                ></BoardGrid>\n            </div>\n            <div className={classes.doneButton(placingShip)}>\n                <StdButton\n                    textSize=\"text-xl\"\n                    string=\"Ready\"\n                    handleClick={donePlacing}\n                ></StdButton>\n            </div>\n            <div className={classes.axisButtonsContainer(placingShip)}>\n                <StdButton\n                    textSize={`${axis === 'X' ? 'text-4xl' : 'text-xl'}`}\n                    string=\"X\"\n                    handleClick={xAxisHandleClick}\n                ></StdButton>\n                <StdButton\n                    string=\"Y\"\n                    textSize={`${axis === 'Y' ? 'text-4xl' : 'text-xl'}`}\n                    handleClick={yAxisHandleClick}\n                >\n                    Y\n                </StdButton>\n            </div>\n            <div className={classes.shipNamesContainer}>\n                <img\n                    src={scroll}\n                    alt=\"scroll-img\"\n                    className=\"w-full h-36\"\n                ></img>\n                <div className={classes.shipNames}>\n                    <PlacingShipsNames\n                        player={player}\n                        placingShip={placingShip}\n                        setPlacingShip={setPlacingShip}\n                    ></PlacingShipsNames>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PlacingPage;\n","import React from 'react';\nimport BoardGrid from './BoardGrid';\n\nconst PlayingTable = ({\n    boardOne,\n    playerOneAttacking,\n    boardTwo,\n    playerTwoAttacking,\n    whosTurn,\n    viewingBoard,\n}) => {\n    return (\n        <>\n            {viewingBoard === 1 ? (\n                <BoardGrid\n                    className={\n                        whosTurn === viewingBoard\n                            ? 'pointer-events-none'\n                            : 'pointer-events-auto'\n                    }\n                    boardState={boardOne}\n                    gridSpotClick={whosTurn === 1 ? 'none' : playerTwoAttacking}\n                    hideOccupied={whosTurn === 1 ? false : true}\n                ></BoardGrid>\n            ) : (\n                <BoardGrid\n                    className={\n                        whosTurn === viewingBoard\n                            ? 'pointer-events-none'\n                            : 'pointer-events-auto'\n                    }\n                    boardState={boardTwo}\n                    gridSpotClick={whosTurn === 2 ? 'none' : playerOneAttacking}\n                    hideOccupied={whosTurn === 2 ? false : true}\n                ></BoardGrid>\n            )}\n        </>\n    );\n};\n\nexport default PlayingTable;\n","import React from 'react';\nimport StdButton from '../components/StdButton';\n\nconst classes = {\n    container: `w-full h-full flex flex-col justify-center items-center text-center bg-indigo-100`,\n    winnerText: `text-3xl text-red-700`,\n    againText: `text-red-700 my-3`,\n};\n\nconst WinnerBoard = ({ winnerName, setViewPage }) => {\n    const reset = () => {\n        setViewPage('');\n    };\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.winnerText}>{winnerName} Wins!</div>\n            <div className={classes.againText}>\n                Would you like to play more?\n            </div>\n            <StdButton\n                string=\"New game\"\n                textSize=\"text-base\"\n                handleClick={reset}\n            ></StdButton>\n        </div>\n    );\n};\n\nexport default WinnerBoard;\n","import React, { useState, useEffect } from 'react';\nimport PlayingTable from '../components/PlayingTable';\nimport WinnerBoard from '../components/WinnerBoard';\nimport StdButton from '../components/StdButton';\nimport rand from '../util/random';\nimport skull from '../images/skull.png';\n\nconst classes = {\n    container: `bg-center`,\n    header: `text-center text-red-700 text-3xl pb-1 bg-gray-300 bg-opacity-90`,\n    gridContainer: `w-5/6 mt-3 mx-auto bg-water-tile my-grid-border`,\n    btnsContainer: 'flex justify-center',\n};\n\nconst PlayingPage = ({ players, vsCpu, setViewPage }) => {\n    const [whosTurn, setWhosTurn] = useState(1);\n    const [viewingBoard, setViewBoard] = useState(2);\n    const [winner, setWinner] = useState('');\n\n    const playerOne = players.playerOne;\n    const playerTwo = players.playerTwo;\n\n    const highlightRandom = (time) => {\n        const gridSpots = Array.from(document.querySelectorAll('.grid-spot'));\n\n        for (const spot of gridSpots) {\n            spot.style.pointerEvents = 'none';\n        }\n\n        let lastRand = 0;\n        let randNum = 0;\n        const adding = setInterval(() => {\n            lastRand = randNum;\n            randNum = rand.randomNumberGen(0, 63);\n            gridSpots[randNum].classList.add('grid-random-highlight');\n        }, 150);\n        const removing = setInterval(() => {\n            gridSpots[lastRand].classList.remove('grid-random-highlight');\n        }, 150);\n        setTimeout(() => {\n            for (const spot of gridSpots) {\n                spot.style.pointerEvents = 'auto';\n            }\n            gridSpots[randNum].classList.remove('grid-random-highlight');\n            clearInterval(removing);\n            clearInterval(adding);\n        }, time - 100);\n    };\n\n    useEffect(() => {\n        if (whosTurn === 2 && vsCpu === true) {\n            const time = 2300;\n            highlightRandom(time);\n            setTimeout(() => {\n                rand.attackBoardRandomly(playerTwo, playerOne);\n                setWhosTurn(1);\n                setViewBoard(2);\n            }, time);\n        }\n    });\n\n    const playerOneAttacking = (cord) => {\n        try {\n            playerOne.attack(playerTwo, cord);\n        } catch (err) {\n            alert(err);\n            return;\n        }\n\n        if (playerTwo.shipsDeadCheck() === true) {\n            setWinner('Player One');\n        }\n        setViewBoard(1);\n        setWhosTurn(2);\n    };\n\n    const playerTwoAttacking = (cord) => {\n        try {\n            playerTwo.attack(playerOne, cord);\n        } catch (err) {\n            alert(err);\n            return;\n        }\n\n        if (playerOne.shipsDeadCheck() === true) {\n            setWinner('Player Two');\n        }\n        setViewBoard(2);\n        setWhosTurn(1);\n    };\n\n    const toggleView = () => {\n        viewingBoard === 1 ? setViewBoard(2) : setViewBoard(1);\n    };\n\n    return (\n        <div\n            className={classes.container}\n            style={{\n                minHeight: '100vh',\n                backgroundImage: `url(${skull})`,\n                backgroundSize: '20%',\n            }}\n        >\n            <div className={classes.header}>\n                {winner !== ''\n                    ? \"It's Over!\"\n                    : viewingBoard === whosTurn\n                    ? `Your board`\n                    : whosTurn === 2 && vsCpu === true\n                    ? `CPU attacking`\n                    : whosTurn === 2 && viewingBoard === 1\n                    ? `Player Two Pick Attack Cord`\n                    : whosTurn === 1 && viewingBoard === 2\n                    ? 'Player One Pick Attack Cord'\n                    : ''}\n            </div>\n            <div\n                style={{\n                    height: '60vh',\n                    backgroundSize: '12.5% 12.5%',\n                    opacity: '.8',\n                }}\n                className={classes.gridContainer}\n            >\n                {winner === '' ? (\n                    <PlayingTable\n                        boardOne={playerOne.board.boardState}\n                        playerOneAttacking={playerOneAttacking}\n                        boardTwo={playerTwo.board.boardState}\n                        playerTwoAttacking={playerTwoAttacking}\n                        whosTurn={whosTurn}\n                        viewingBoard={viewingBoard}\n                    ></PlayingTable>\n                ) : (\n                    <WinnerBoard\n                        winnerName={winner}\n                        setViewPage={setViewPage}\n                    ></WinnerBoard>\n                )}\n            </div>\n            <div className={classes.btnsContainer}>\n                {whosTurn === 2 && vsCpu === true ? (\n                    ''\n                ) : (\n                    <StdButton\n                        string=\"Toggle View\"\n                        textSize=\"text-base\"\n                        handleClick={toggleView}\n                    ></StdButton>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default PlayingPage;\n","import React, { useState } from 'react';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport PlacingPage from './pages/PlacingPage';\nimport PlayingPage from './pages/PlayingPage';\n\nfunction App() {\n    const [viewPage, setViewPage] = useState('');\n    const [vsCpu, setVsCpu] = useState('');\n    const [players, setPlayers] = useState([]);\n\n    const placingStart = (playerOne, playerTwo) => {\n        const playersObj = { playerOne: playerOne, playerTwo: playerTwo };\n        setPlayers(playersObj);\n        setViewPage('placing');\n    };\n\n    return (\n        <div className=\"App\">\n            {viewPage === 'placing' ? (\n                <PlacingPage\n                    player={players['playerOne']}\n                    setViewPage={setViewPage}\n                    vsCpu={vsCpu}\n                ></PlacingPage>\n            ) : viewPage === 'placingTwo' ? (\n                <PlacingPage\n                    player={players['playerTwo']}\n                    setViewPage={setViewPage}\n                    vsCpu={vsCpu}\n                ></PlacingPage>\n            ) : viewPage === 'playing' ? (\n                <PlayingPage\n                    players={players}\n                    vsCpu={vsCpu}\n                    setViewPage={setViewPage}\n                ></PlayingPage>\n            ) : (\n                <HomePage\n                    placingStart={placingStart}\n                    setVsCpu={setVsCpu}\n                    vsCpu={vsCpu}\n                ></HomePage>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}